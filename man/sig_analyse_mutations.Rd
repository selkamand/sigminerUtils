% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SignatureAnalysis.R
\name{sig_analyse_mutations}
\alias{sig_analyse_mutations}
\title{Mutational Signature Analysis}
\usage{
sig_analyse_mutations(
  maf,
  copynumber = NULL,
  structuralvariant = NULL,
  db_sbs = NULL,
  db_indel = NULL,
  db_dbs = NULL,
  db_cn = NULL,
  db_sv = NULL,
  db_sbs_name = NULL,
  db_indel_name = NULL,
  db_dbs_name = NULL,
  db_cn_name = NULL,
  db_sv_name = NULL,
  ref_tallies = NULL,
  ref_umaps_prefix = NULL,
  seed = 111,
  min_contribution_threshold = 0.05,
  ref = c("hg38", "hg19"),
  output_dir = "./signatures",
  exposure_type = c("absolute", "relative"),
  n_bootstraps = 100,
  temp_dir = tempdir(),
  cores = 1,
  output_rds_and_pdfs = FALSE
)
}
\arguments{
\item{maf}{The input MAF file. Can be a maf object or the path to a MAF file}

\item{copynumber}{The input copynumber data.frame. See \code{\link[sigminer:read_copynumber]{sigminer::read_copynumber()}} for details.}

\item{structuralvariant}{The input structural variant data.frame. See \code{\link[sigminer:read_sv_as_rs]{sigminer::read_sv_as_rs()}} for details}

\item{db_sbs, db_indel, db_dbs, db_cn, db_sv}{a signature collection data.frame where rows are channels and columns are signatures. Row names should be signature channels.
See \code{sigstash::sig_load("COSMIC_v3.4_SBS_GRCh38", format = "sigminer")}  for an example.
Alternatively, you can supply a path to signature collections in tidy_csv format (see \code{\link[sigstash:sig_read_signatures]{sigstash::sig_read_signatures()}} for details)}

\item{db_sbs_name, db_indel_name, db_dbs_name, db_cn_name, db_sv_name}{names of signature databases (used for logs). If NULL, will try and lookup using \code{\link[sigstash:sig_identify_collection]{sigstash::sig_identify_collection()}}.}

\item{ref_tallies}{path to a parquet file describing catalogues of a reference database. Can be produced from a folder full of sigminerUtils signature outputs using \code{\link[=sig_create_reference_set]{sig_create_reference_set()}}.
If building yourself, it must contain columns class,sample,channel,type,fraction,count. If building your own, we recommend partitioning on class then sample.}

\item{ref_umaps_prefix}{prefix of Rds file representing a serialised list of umap objects for different collection types. Produced by \code{\link[=sig_create_reference_set]{sig_create_reference_set()}}.}

\item{seed}{used for umap projection}

\item{min_contribution_threshold}{The minimum contribution threshold a signature must surpass for it to count as 'present' in a bootstrap (typically 0.05). This is sometimes referred to as the sparsity threshold. See \code{\link[sigstats:sig_compute_experimental_p_value]{sigstats::sig_compute_experimental_p_value()}} for details.}

\item{ref}{A character vector specifying the reference genome. One of 'hg38' or 'hg19'.}

\item{output_dir}{The output directory for storing results. Default is "./signatures".}

\item{exposure_type}{The type of exposure. Can be "absolute" or "relative". One of "absolute" or "relative"}

\item{n_bootstraps}{The number of bootstrap iterations for fitting signatures. Default is 100.}

\item{temp_dir}{The temporary directory for storing intermediate files. Default is tempdir().}

\item{cores}{Number of cores to use.}

\item{output_rds_and_pdfs}{should we create a sigstory RDS file and signature PDFs (default: false)}
}
\value{
None.
}
\description{
Screen datasets for known mutational signatures by
supplying both sample mutation data and collections of known
signatures.
}
\details{
Produces the following files:

Per Run:
signature_collections.csv: Describes the signature collection used COSMIC_v3.4_SBS_GRCh38
thresholds.csv: Describes any the thresholds that were used

For each signature class:
\if{html}{\out{<signatureclass>}}_catalogue.\if{html}{\out{<sampleid>}}.\if{html}{\out{<refgenome>}}.tally.csv.gz: A tally of mutations in the sample by channel.
\if{html}{\out{<signatureclass>}}_fit.\if{html}{\out{<sampleid>}}.\if{html}{\out{<refgenome>}}.expo.csv.gz: The signature model produced by sigminer (\% contribution of each signature). Annotated with p-val from bootstrap_summary.csv.gz
\if{html}{\out{<signatureclass>}}_fit.\if{html}{\out{<sampleid>}}.\if{html}{\out{<refgenome>}}.bootstrap_summary.csv.gz: A signature-level summary of stability across bootstraps. Includes experimentally defined P-values.
\if{html}{\out{<signatureclass>}}_fit.\if{html}{\out{<sampleid>}}.\if{html}{\out{<refgenome>}}.expo_bootstraps.csv.gz: The optimal signature model produced in each bootstrap.
\if{html}{\out{<signatureclass>}}_fit.\if{html}{\out{<sampleid>}}.\if{html}{\out{<refgenome>}}.error_and_cosine.csv.gz: Error and cosine similarity of signature model VS original data (unfiltered model, so may include unstable signatures)
\if{html}{\out{<signatureclass>}}_fit.\if{html}{\out{<sampleid>}}.\if{html}{\out{<refgenome>}}.error_and_cosine_bootstraps.csv.gz: Error and cosine similarity of each bootstraps optimal signature model vs original data (unfiltered model, so may include unstable signatures).
\if{html}{\out{<signatureclass>}}_fit.\if{html}{\out{<sampleid>}}.\if{html}{\out{<refgenome>}}.p_val.csv.gz: Per-signature p value computed by sigminer. Note this is different to the p-value in bootstrap_summary and expo datasets (we recommend using the latter, which has been added for greater consistency with other signature pipelines).
}
